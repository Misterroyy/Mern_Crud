[{"M:\\Mern_Crud\\client\\src\\index.js":"1","M:\\Mern_Crud\\client\\src\\App.js":"2","M:\\Mern_Crud\\client\\src\\reportWebVitals.js":"3","M:\\Mern_Crud\\client\\src\\components\\Formtable.js":"4"},{"size":535,"mtime":1691134220272,"results":"5","hashOfConfig":"6"},{"size":3661,"mtime":1691134934192,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1691134221328,"results":"8","hashOfConfig":"6"},{"size":1244,"mtime":1691120989375,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14gxzem",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"M:\\Mern_Crud\\client\\src\\index.js",[],[],"M:\\Mern_Crud\\client\\src\\App.js",["23"],[],"import React, { useEffect, useState } from 'react'\nimport \"./App.css\";\nimport axios from \"axios\"\nimport Formtable from './components/Formtable';\n\naxios.defaults.baseURL = \"http://localhost:8080\"\nconst App = () => {\n  const [addsection, setAddsection] = useState(false)\n  const [editSection, setEditSection] = useState(false)\n  const [formData, setFormData] = useState({\n    name: \"\",\n    title: \"\",\n    description: \"\",\n    status: \"\",\n  })\n\n  const [formDataEdit, setFormDataEdit] = useState({\n    name: \"\",\n    title: \"\",\n    description: \"\",\n    status: \"\",\n    _id: \"\"\n  })\n\n  const [dataList, setDataList] = useState([])\n\n\n  const handleOnChange = (e) => {\n    const { value, name } = e.target\n    setFormData((preve) => {\n      return {\n        ...preve,\n        [name]: value\n      }\n\n    })\n  }\n\n  const handleEdit = (el) => {\n    setFormDataEdit(el)\n    setEditSection(true)\n  }\n\n  const handlesubmit = async (e) => {\n    e.preventDefault()\n    const data = await axios.post(\"/create\", formData)\n    if (data.data.success) {\n      setAddsection(false)\n      getFetchData()\n    }\n\n  }\n\n  const getFetchData = async () => {\n    const data = await axios.get(\"/\")\n    if (data.data.success) {\n      setDataList(data.data.data)\n    }\n  }\n  useEffect(() => {\n    getFetchData()\n  }, [])\n\n  const handleDelete = async (id) => {\n    const data = await axios.delete(\"/delete/\" + id)\n    if (data.data.success) {\n      getFetchData()\n    }\n  }\n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const data = await axios.put(\"/Update/\", formDataEdit)\n    getFetchData()\n    setEditSection(false)\n  }\n  const handleEditChange = async (e) => {\n    const { value, name } = e.target\n    setFormDataEdit((preve) => {\n      return {\n        ...preve,\n        [name]: value\n      }\n\n    })\n  }\n  return (\n    <>\n      <div className='container'>\n        <button className='btn btn-add' onClick={() => setAddsection(true)}> Add</button>\n        {\n          addsection && (\n            <Formtable\n              handlesubmit={handlesubmit}\n              handleOnChange={handleOnChange}\n              handleClose={() => setAddsection(false)}\n              rest={formData} />\n          )}\n\n        {\n          editSection && (\n            <Formtable\n              handlesubmit={handleUpdate}\n              handleOnChange={handleEditChange}\n              handleClose={() => setEditSection(false)}\n              rest={formDataEdit} />\n          )}\n\n\n        <div className='tableContainer'>\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>title</th>\n                <th>description</th>\n                <th>status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                dataList[0] ? (\n                  dataList.map((el) => {\n                    return (\n                      <tr>\n                        <td>{el.name}</td>\n                        <td>{el.title}</td>\n                        <td>{el.description}</td>\n                        <td>{el.status}</td>\n                        <td>\n                          <button className='btn btn-edit' onClick={() => handleEdit(el)}\n                          >Edit</button>\n                          <button className='btn btn-delete' onClick={() => handleDelete(el._id)}>Delete</button>\n                        </td>\n                      </tr>\n                    )\n                  })) : (\n                  <p>No data</p>\n                )\n              }\n\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n      \n\n    </>\n\n  )\n\n\n}\n\n\n\nexport default App\n","M:\\Mern_Crud\\client\\src\\reportWebVitals.js",[],[],"M:\\Mern_Crud\\client\\src\\components\\Formtable.js",[],[],{"ruleId":"24","severity":1,"message":"25","line":72,"column":11,"nodeType":"26","messageId":"27","endLine":72,"endColumn":15},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]